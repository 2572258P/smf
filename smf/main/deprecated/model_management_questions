


def submit(request,question_type="scq"):
    if CheckAuth(request) is False:
        return ShowNotAuthedPage()
    profile = UserProfile.objects.filter(user=request.user).first()
    context = handle_createQuestion(request,question_type,profile)
    return render(request,'question_creator.html',context)

def edit(request):    
    if CheckAuth(request) is False:
        return ShowNotAuthedPage()
    if request.user.is_authenticated is False:
        return HttpResponse("The page requires log-in")

    context = {}
    if request.POST.get('delete'):
        deleted = False
        for q in Question.objects.all():
            if request.POST.get('del_'+str(q.id)):
                Answer.objects.filter(question_id=q.id).delete()
                q.delete()
                deleted = True
        if deleted:
            context['msg_delete'] = 'Questions have been successfully deleted'
    elif request.POST.get('update_changes'):
        
        context['msg_dic'] = {}
        for q in Question.objects.all():            
            new_pri = request.POST.get('mPri_'+str(q.id),None)
            new_type = request.POST.get('mType_'+str(q.id),None)
            if new_pri and new_pri != q.priority or new_type and new_type != q.match_type:
                q.priority = new_pri
                q.match_type = new_type
                q.save()
                context['msg_dic'][q.id] = "Changes have been updated!"
            else:
                context['msg_dic'][q.id] = "No change detected"

    context['questions'] = Question.objects.all()
    return render(request,'question_management.html',context)



